{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAYC,SAASC,cAAc,yBACnCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAE3CF,EAAUM,iBAAiB,SAAUC,IACnCA,EAAEC,iBAEF,MAAMC,GAASN,EAAWO,MACpBC,GAAQP,EAAUM,MAClBE,GAAUP,EAAYK,MAE5B,SAASG,EAAoBC,EAAUC,GACrC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQK,EAAAxB,GAASyB,OAAOC,QACzB,uBAAqBV,QAAiBC,QAEnCG,EAAKI,EAAAxB,GAASyB,OAAOE,QAAQ,sBAAoBX,QAAeC,OAAW,GAE9EA,EAAM,G,CAIb,IAAK,IAAIW,EAAI,EAAGA,GAAKd,EAAQc,IAC3Bb,EAAoBa,EAAGjB,GAASiB,EAAI,GAAKf,GAAMgB,MAAKC,GAAQA,IAAMC,OAAOC,GAAKC,QAAQC,IAAIF,IAAG","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nconst submitBtn = document.querySelector('button[type=\"submit\"]');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n\nsubmitBtn.addEventListener(\"click\", (e) => {\n  e.preventDefault();\n\n  const delay = +delayInput.value;\n  const step = +stepInput.value;\n  const amount = +amountInput.value;\n\n  function createSinglePromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve(Notiflix.Notify.success(\n         `✅ Fulfilled promise ${position} in ${delay}ms`));\n        } else {\n          reject(Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n        }\n      }, delay);\n    });\n  }\n\n  for (let i = 1; i <= amount; i++) {\n    createSinglePromise(i, delay + (i - 1) * step).then(resp => resp).catch( e => console.log(e));\n  }\n});\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$submitBtn","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","addEventListener","e1","preventDefault","delay1","value","step","amount","createSinglePromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$parcel$interopDefault","Notify","success","failure","i","then","resp","catch","e","console","log"],"version":3,"file":"03-promises.16f0717f.js.map"}